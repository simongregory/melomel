<?xml version="1.0" encoding="utf-8"?>
<project name="melomel" basedir="." default="build">
	<!-- Properties -->
	<property environment="env"/>
	<property name="FLEX_HOME" value="${env.FLEX_HOME}"/>
    <property name="compc.jar" value="${FLEX_HOME}/lib/compc.jar" />
    <property name="mxmlc.jar" value="${FLEX_HOME}/lib/mxmlc.jar" />
    <property name="asdoc.jar" value="${FLEX_HOME}/lib/mxmlc.jar" />

    <property name="version" value="0.6.10"/>

	<property name="doc.dir" value="${basedir}/doc"/>
	<property name="etc.dir" value="${basedir}/etc"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="target.dir" value="${basedir}/target"/>

	<!-- Task Definitions -->
	<taskdef resource="flexTasks.tasks" classpath="${etc.dir}/flexTasks.jar" />
	<taskdef resource="flexUnitTasks.tasks" classpath="${etc.dir}/flexUnitTasks-4.0.0.jar" />

	<!-- Target: Build SWC -->
	<!-- compc -load-config+=src/main/resources/melomel-config.xml -->
	<target name="build">
		<mkdir dir="${target.dir}"/>

		<java jar="${compc.jar}" fork="true" failonerror="true">
			<jvmarg value="-Xmx1024M"/>
			<jvmarg value="-Xms512M"/>
			<arg value="+flexlib=${FLEX_HOME}/frameworks"/>
			<arg value="-load-config+=${src.dir}/main/resources/melomel-config.xml"/>
		</java>
		
		<java jar="${compc.jar}" fork="true" failonerror="true">
			<jvmarg value="-Xmx1024M"/>
			<jvmarg value="-Xms512M"/>
			<arg value="+flexlib=${FLEX_HOME}/frameworks"/>
			<arg value="-load-config+=${src.dir}/main/resources/melomel-stub-config.xml"/>
		</java>
		
		<move file="${target.dir}/melomel.swc" tofile="${target.dir}/melomel-${version}.swc"/>
		<move file="${target.dir}/melomel-stub.swc" tofile="${target.dir}/melomel-stub-${version}.swc"/>
		
		<zip
			destfile="${target.dir}/melomel-${version}.zip"
			basedir="${target.dir}"
			includes="melomel*-${version}.swc"
		/>
	</target>
	
	<!-- Target: Test -->
	<!-- mxmlc -load-config+=src/test/resources/BridgeRunner-config.xml src/test/flex/BridgeRunner.mxml -->
	<!-- mxmlc +configname=air -load-config+=src/test/resources/TestRunner-config.xml src/test/flex/TestRunner.mxml -->
	<target name="test-build">
		<mkdir dir="${target.dir}/test"/>

		<!-- Bridge -->
		<java jar="${mxmlc.jar}" fork="true" failonerror="true">
			<arg value="+flexlib=${FLEX_HOME}/frameworks"/>
			<arg value="+configname=air"/>
			<arg value="-load-config+=${src.dir}/test/resources/BridgeRunner-config.xml"/>
			<arg value="${src.dir}/test/flex/BridgeRunner.mxml"/>
		</java>

		<!-- TestRunner -->
		<java jar="${mxmlc.jar}" fork="true" failonerror="true">
			<jvmarg value="-Xmx1024M"/>
			<jvmarg value="-Xms512M"/>
			<arg value="+flexlib=${FLEX_HOME}/frameworks"/>
			<arg value="+configname=air"/>
			<arg value="-load-config+=${src.dir}/test/resources/TestRunner-config.xml"/>
			<arg value="${src.dir}/test/flex/TestRunner.mxml"/>
		</java>
	</target>
	
	<target name="test-run">
		<flexunit
			player="air"
			swf="${target.dir}/test/TestRunner.swf"
			toDir="${target.dir}/test"
			haltonfailure="false" verbose="true"
			localTrusted="true"
			headless="true"
		/>
	</target>

	<target name="test-report" depends="test-run">
		<junitreport todir="${target.dir}/test">
			<fileset dir="${target.dir}/test">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${target.dir}/test/html" />
		</junitreport>
	</target>

	<target name="deps">
		<copy file="${src.dir}/test/resources/TestRunner-app.xml" tofile="${target.dir}/test/TestRunner-app.xml" overwrite="true"/>
	</target>

	<target name="test" depends="deps,test-build,test-run,test-report"/>


	<!-- Target: Documentation -->
	<target name="doc">
		<mkdir dir="${doc.dir}"/>

		<!-- Find classes -->
		<path id="files">
			<fileset dir="${src.dir}/main/flex">
				<include name="**/**"/>
			</fileset>
		</path>
		<pathconvert property="classes" pathsep=" " dirsep="." refid="files">
			<map from="${src.dir}/main/flex/" to=""/>
			<mapper>
				<chainedmapper><globmapper from="*.as" to="*"/></chainedmapper>
			</mapper>
		</pathconvert>

		<exec executable="${FLEX_HOME}/bin/asdoc" failonerror="true">
			<arg line="-source-path+=${src.dir}/main/flex"/>
			<arg line="-doc-classes ${classes}"/>
			<arg line="-window-title 'Melomel'"/>
			<arg line="-output ${doc.dir}/flex"/>
			<arg line="-package melomel.commands 'Contains the classes for executing Melomel actions within the Flash virtual machine.'"/>
			<arg line="-package melomel.commands.formatters 'Contains the classes for formatting return objects and errors to the external interface.'"/>
			<arg line="-package melomel.commands.parsers 'Contains the classes for parsing messages from the external interface.'"/>
			<arg line="-package melomel.core 'Contains the classes responsible for managing the connection to the external interface and proxying objects.'"/>
			<arg line="-package melomel.errors 'Contains the standard Melomel error.'"/>
			<arg line="-package melomel.mxml 'Contains the MXML interface for automatically connecting to Melomel.'"/>
		</exec>
	</target>

	<!-- Target: Clean -->
	<target name="clean">
		<delete dir="${target.dir}"/>
		<delete dir="${doc.dir}"/>
	</target>
</project>
